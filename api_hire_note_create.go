// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// CreateHireNote 创建备注信息
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/create
func (r *HireService) CreateHireNote(ctx context.Context, request *CreateHireNoteReq, options ...MethodOptionFunc) (*CreateHireNoteResp, *Response, error) {
	if r.cli.mock.mockHireCreateHireNote != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Hire#CreateHireNote mock enable")
		return r.cli.mock.mockHireCreateHireNote(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Hire",
		API:                   "CreateHireNote",
		Method:                "POST",
		URL:                   "https://open.feishu.cn/open-apis/hire/v1/notes",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(createHireNoteResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockHireCreateHireNote(f func(ctx context.Context, request *CreateHireNoteReq, options ...MethodOptionFunc) (*CreateHireNoteResp, *Response, error)) {
	r.mockHireCreateHireNote = f
}

func (r *Mock) UnMockHireCreateHireNote() {
	r.mockHireCreateHireNote = nil
}

type CreateHireNoteReq struct {
	UserIDType    *IDType `query:"user_id_type" json:"-"`   // 用户 ID 类型, 示例值："open_id", 可选值有: `open_id`：用户的 open id, `union_id`：用户的 union id, `user_id`：用户的 user id, 默认值: `open_id`, 当值为 `user_id`, 字段权限要求: 获取用户 user ID
	TalentID      *string `json:"talent_id,omitempty"`      // 人才ID, 示例值："6891522620127185159"
	ApplicationID *string `json:"application_id,omitempty"` // 投递ID, 示例值："6891565231751825671"
	CreatorID     *string `json:"creator_id,omitempty"`     // 创建人ID, 示例值："ou_0ab5d69b3848d44f4bf0751bffaa31db"
	Content       *string `json:"content,omitempty"`        // 内容, 示例值："111"
}

type createHireNoteResp struct {
	Code int64               `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string              `json:"msg,omitempty"`  // 错误描述
	Data *CreateHireNoteResp `json:"data,omitempty"`
}

type CreateHireNoteResp struct {
	Note *CreateHireNoteRespNote `json:"note,omitempty"` // 备注数据
}

type CreateHireNoteRespNote struct {
	ID            string `json:"id,omitempty"`             // ID备注
	TalentID      string `json:"talent_id,omitempty"`      // 人才ID
	ApplicationID string `json:"application_id,omitempty"` // 投递ID
	IsPrivate     bool   `json:"is_private,omitempty"`     // 是否私密
	CreateTime    int64  `json:"create_time,omitempty"`    // 创建时间
	ModifyTime    int64  `json:"modify_time,omitempty"`    // 更新时间
	CreatorID     string `json:"creator_id,omitempty"`     // 创建人ID
	Content       string `json:"content,omitempty"`        // 内容
}
