// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// IsApplicationUserAdmin
//
// 该接口用于查询用户是否为应用管理员。
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uITN1EjLyUTNx4iM1UTM
func (r *ApplicationService) IsApplicationUserAdmin(ctx context.Context, request *IsApplicationUserAdminReq, options ...MethodOptionFunc) (*IsApplicationUserAdminResp, *Response, error) {
	if r.cli.mock.mockApplicationIsApplicationUserAdmin != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Application#IsApplicationUserAdmin mock enable")
		return r.cli.mock.mockApplicationIsApplicationUserAdmin(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Application",
		API:                   "IsApplicationUserAdmin",
		Method:                "GET",
		URL:                   "https://open.feishu.cn/open-apis/application/v3/is_user_admin",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(isApplicationUserAdminResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockApplicationIsApplicationUserAdmin(f func(ctx context.Context, request *IsApplicationUserAdminReq, options ...MethodOptionFunc) (*IsApplicationUserAdminResp, *Response, error)) {
	r.mockApplicationIsApplicationUserAdmin = f
}

func (r *Mock) UnMockApplicationIsApplicationUserAdmin() {
	r.mockApplicationIsApplicationUserAdmin = nil
}

type IsApplicationUserAdminReq struct {
	OpenID     *string `json:"open_id,omitempty"`     // 用户 open_id，open_id 和 employee_id 两个参数必须包含其一，若同时传入取 open_id
	EmployeeID *string `json:"employee_id,omitempty"` // 用户 employee_id（同通讯录 v3 版本中的 user_id），open_id 和 employee_id 两个参数必须包含其一，若同时传入取 open_id
}

type isApplicationUserAdminResp struct {
	Code int64                       `json:"code,omitempty"` // 返回码，非 0 表示失败
	Msg  string                      `json:"msg,omitempty"`  // 返回码的描述
	Data *IsApplicationUserAdminResp `json:"data,omitempty"` // 返回的业务信息
}

type IsApplicationUserAdminResp struct {
	IsAppAdmin bool `json:"is_app_admin,omitempty"` // 用户是否为管理员，true 为是，false 为否
}
