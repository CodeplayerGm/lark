// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// CreateTaskReminder 该接口用于创建任务的提醒时间
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/create
func (r *TaskService) CreateTaskReminder(ctx context.Context, request *CreateTaskReminderReq, options ...MethodOptionFunc) (*CreateTaskReminderResp, *Response, error) {
	if r.cli.mock.mockTaskCreateTaskReminder != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Task#CreateTaskReminder mock enable")
		return r.cli.mock.mockTaskCreateTaskReminder(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Task",
		API:                   "CreateTaskReminder",
		Method:                "POST",
		URL:                   "https://open.feishu.cn/open-apis/task/v1/tasks/:task_id/reminders",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(createTaskReminderResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockTaskCreateTaskReminder(f func(ctx context.Context, request *CreateTaskReminderReq, options ...MethodOptionFunc) (*CreateTaskReminderResp, *Response, error)) {
	r.mockTaskCreateTaskReminder = f
}

func (r *Mock) UnMockTaskCreateTaskReminder() {
	r.mockTaskCreateTaskReminder = nil
}

type CreateTaskReminderReq struct {
	TaskID             string `path:"task_id" json:"-"`               // 任务 ID, 示例值："83912691-2e43-47fc-94a4-d512e03984fa"
	RelativeFireMinute int64  `json:"relative_fire_minute,omitempty"` // 相对于截止时间的提醒时间（如提前 30 分钟，截止时间后 30 分钟，则为 -30）, 示例值：30
}

type createTaskReminderResp struct {
	Code int64                   `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string                  `json:"msg,omitempty"`  // 错误描述
	Data *CreateTaskReminderResp `json:"data,omitempty"`
}

type CreateTaskReminderResp struct {
	Reminder *CreateTaskReminderRespReminder `json:"reminder,omitempty"` // 返回创建成功的提醒时间
}

type CreateTaskReminderRespReminder struct {
	ID                 string `json:"id,omitempty"`                   // 提醒时间设置的 ID（在删除时候需要使用这个）
	RelativeFireMinute int64  `json:"relative_fire_minute,omitempty"` // 相对于截止时间的提醒时间（如提前 30 分钟，截止时间后 30 分钟，则为 -30）
}
