// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// EventV2AwemeEcosystemAwemeUserBindedAccountV1
//
// 绑定关系变更事件
// 适用于获取“抖音员工号”运营者是否发生变更，即当“抖音员工号”关联的飞书账号发生变化时，可通过该权限获知到此事件。{使用示例}(url=/api/tools/api_explore/api_explore_config?project=aweme_ecosystem&version=v1&resource=aweme_user&event=binded_account)
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/bytedance-open-ecosystem/aweme_ecosystem-v1/aweme_user/events/binded_account
func (r *EventCallbackService) HandlerEventV2AwemeEcosystemAwemeUserBindedAccountV1(f eventV2AwemeEcosystemAwemeUserBindedAccountV1Handler) {
	r.cli.eventHandler.eventV2AwemeEcosystemAwemeUserBindedAccountV1Handler = f
}

type eventV2AwemeEcosystemAwemeUserBindedAccountV1Handler func(ctx context.Context, cli *Lark, schema string, header *EventHeaderV2, event *EventV2AwemeEcosystemAwemeUserBindedAccountV1) (string, error)

type EventV2AwemeEcosystemAwemeUserBindedAccountV1 struct {
	EventAwemeUser *EventV2AwemeEcosystemAwemeUserBindedAccountV1EventAwemeUser `json:"event_aweme_user,omitempty"` // 变更后绑定关系
}

type EventV2AwemeEcosystemAwemeUserBindedAccountV1EventAwemeUser struct {
	UserID      *EventV2AwemeEcosystemAwemeUserBindedAccountV1EventAwemeUserUserID `json:"user_id,omitempty"`       // 用户 ID
	AwemeUserID string                                                             `json:"aweme_user_id,omitempty"` // 绑定的抖音用户ID
	IsBinded    bool                                                               `json:"is_binded,omitempty"`     // 飞书账号是否有绑定关系
}

type EventV2AwemeEcosystemAwemeUserBindedAccountV1EventAwemeUserUserID struct {
	UnionID string `json:"union_id,omitempty"` // 用户的 union id
	UserID  string `json:"user_id,omitempty"`  // 用户的 user id, 字段权限要求:  获取用户 user ID
	OpenID  string `json:"open_id,omitempty"`  // 用户的 open id
}
