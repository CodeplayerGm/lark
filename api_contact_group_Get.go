// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// GetContactGroup 根据用户组 ID 查询某个用户组的基本信息，请确保应用的通讯录权限范围里包括该用户组或者是“全部员工”，[点击了解通讯录权限范围](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/scope/overview)。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/get
func (r *ContactService) GetContactGroup(ctx context.Context, request *GetContactGroupReq, options ...MethodOptionFunc) (*GetContactGroupResp, *Response, error) {
	if r.cli.mock.mockContactGetContactGroup != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Contact#GetContactGroup mock enable")
		return r.cli.mock.mockContactGetContactGroup(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Contact",
		API:                   "GetContactGroup",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/contact/v3/group/:group_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getContactGroupResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockContactGetContactGroup(f func(ctx context.Context, request *GetContactGroupReq, options ...MethodOptionFunc) (*GetContactGroupResp, *Response, error)) {
	r.mockContactGetContactGroup = f
}

func (r *Mock) UnMockContactGetContactGroup() {
	r.mockContactGetContactGroup = nil
}

type GetContactGroupReq struct {
	GroupID string `path:"group_id" json:"-"` // 用户组ID, 示例值："g193821"
}

type getContactGroupResp struct {
	Code int64                `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string               `json:"msg,omitempty"`  // 错误描述
	Data *GetContactGroupResp `json:"data,omitempty"`
}

type GetContactGroupResp struct {
	Group *GetContactGroupRespGroup `json:"group,omitempty"` // 用户组详情
}

type GetContactGroupRespGroup struct {
	ID                    string `json:"id,omitempty"`                      // 用户组ID
	Name                  string `json:"name,omitempty"`                    // 用户组名字
	Description           string `json:"description,omitempty"`             // 用户组描述
	MemberUserCount       int64  `json:"member_user_count,omitempty"`       // 用户组成员中用户的数量
	MemberDepartmentCount int64  `json:"member_department_count,omitempty"` // 用户组成员中部门的数量
}
