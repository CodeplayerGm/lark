// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// CreateCoreHrJobLevel 创建职级
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/create
// new doc: https://open.feishu.cn/document/server-docs/corehr-v1/job-management/job_level/create
func (r *CoreHrService) CreateCoreHrJobLevel(ctx context.Context, request *CreateCoreHrJobLevelReq, options ...MethodOptionFunc) (*CreateCoreHrJobLevelResp, *Response, error) {
	if r.cli.mock.mockCoreHrCreateCoreHrJobLevel != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] CoreHr#CreateCoreHrJobLevel mock enable")
		return r.cli.mock.mockCoreHrCreateCoreHrJobLevel(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHr",
		API:                   "CreateCoreHrJobLevel",
		Method:                "POST",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/job_levels",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(createCoreHrJobLevelResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHrCreateCoreHrJobLevel mock CoreHrCreateCoreHrJobLevel method
func (r *Mock) MockCoreHrCreateCoreHrJobLevel(f func(ctx context.Context, request *CreateCoreHrJobLevelReq, options ...MethodOptionFunc) (*CreateCoreHrJobLevelResp, *Response, error)) {
	r.mockCoreHrCreateCoreHrJobLevel = f
}

// UnMockCoreHrCreateCoreHrJobLevel un-mock CoreHrCreateCoreHrJobLevel method
func (r *Mock) UnMockCoreHrCreateCoreHrJobLevel() {
	r.mockCoreHrCreateCoreHrJobLevel = nil
}

// CreateCoreHrJobLevelReq ...
type CreateCoreHrJobLevelReq struct {
	ClientToken  *string                               `query:"client_token" json:"-"`  // 根据client_token是否一致来判断是否为同一请求, 示例值: 12454646
	LevelOrder   int64                                 `json:"level_order,omitempty"`   // 职级数值, 示例值: 9999
	Code         *string                               `json:"code,omitempty"`          // 编码, 示例值: "VQzo/BSonp8l6PmcZ+VlDhkd2595LMkhyBAGX6HAlCY="
	Name         []*CreateCoreHrJobLevelReqName        `json:"name,omitempty"`          // 名称
	Description  []*CreateCoreHrJobLevelReqDescription `json:"description,omitempty"`   // 描述
	Active       bool                                  `json:"active,omitempty"`        // 是否启用, 示例值: true
	CustomFields []*CreateCoreHrJobLevelReqCustomField `json:"custom_fields,omitempty"` // 自定义字段
}

// CreateCoreHrJobLevelReqCustomField ...
type CreateCoreHrJobLevelReqCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名, 示例值: "name"
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05"), 示例值: "\"Sandy\""
}

// CreateCoreHrJobLevelReqDescription ...
type CreateCoreHrJobLevelReqDescription struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言, 示例值: "zh-CN"
	Value string `json:"value,omitempty"` // 名称信息的内容, 示例值: "张三"
}

// CreateCoreHrJobLevelReqName ...
type CreateCoreHrJobLevelReqName struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言, 示例值: "zh-CN"
	Value string `json:"value,omitempty"` // 名称信息的内容, 示例值: "张三"
}

// CreateCoreHrJobLevelResp ...
type CreateCoreHrJobLevelResp struct {
	JobLevel *CreateCoreHrJobLevelRespJobLevel `json:"job_level,omitempty"` // 创建成功的职级信息
}

// CreateCoreHrJobLevelRespJobLevel ...
type CreateCoreHrJobLevelRespJobLevel struct {
	ID           string                                         `json:"id,omitempty"`            // 职级 ID
	LevelOrder   int64                                          `json:"level_order,omitempty"`   // 职级数值
	Code         string                                         `json:"code,omitempty"`          // 编码
	Name         []*CreateCoreHrJobLevelRespJobLevelName        `json:"name,omitempty"`          // 名称
	Description  []*CreateCoreHrJobLevelRespJobLevelDescription `json:"description,omitempty"`   // 描述
	Active       bool                                           `json:"active,omitempty"`        // 是否启用
	CustomFields []*CreateCoreHrJobLevelRespJobLevelCustomField `json:"custom_fields,omitempty"` // 自定义字段
}

// CreateCoreHrJobLevelRespJobLevelCustomField ...
type CreateCoreHrJobLevelRespJobLevelCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// CreateCoreHrJobLevelRespJobLevelDescription ...
type CreateCoreHrJobLevelRespJobLevelDescription struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// CreateCoreHrJobLevelRespJobLevelName ...
type CreateCoreHrJobLevelRespJobLevelName struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// createCoreHrJobLevelResp ...
type createCoreHrJobLevelResp struct {
	Code int64                     `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string                    `json:"msg,omitempty"`  // 错误描述
	Data *CreateCoreHrJobLevelResp `json:"data,omitempty"`
}
