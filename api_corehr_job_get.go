// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetCoreHrJob 根据 ID 查询单个职务。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job/get
func (r *CoreHrService) GetCoreHrJob(ctx context.Context, request *GetCoreHrJobReq, options ...MethodOptionFunc) (*GetCoreHrJobResp, *Response, error) {
	if r.cli.mock.mockCoreHrGetCoreHrJob != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] CoreHr#GetCoreHrJob mock enable")
		return r.cli.mock.mockCoreHrGetCoreHrJob(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHr",
		API:                   "GetCoreHrJob",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/jobs/:job_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getCoreHrJobResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHrGetCoreHrJob mock CoreHrGetCoreHrJob method
func (r *Mock) MockCoreHrGetCoreHrJob(f func(ctx context.Context, request *GetCoreHrJobReq, options ...MethodOptionFunc) (*GetCoreHrJobResp, *Response, error)) {
	r.mockCoreHrGetCoreHrJob = f
}

// UnMockCoreHrGetCoreHrJob un-mock CoreHrGetCoreHrJob method
func (r *Mock) UnMockCoreHrGetCoreHrJob() {
	r.mockCoreHrGetCoreHrJob = nil
}

// GetCoreHrJobReq ...
type GetCoreHrJobReq struct {
	JobID string `path:"job_id" json:"-"` // 职务 ID, 示例值: "151515"
}

// GetCoreHrJobResp ...
type GetCoreHrJobResp struct {
	Job *GetCoreHrJobRespJob `json:"job,omitempty"` // 职务信息
}

// GetCoreHrJobRespJob ...
type GetCoreHrJobRespJob struct {
	ID                 string                            `json:"id,omitempty"`                    // 职务 ID
	Code               string                            `json:"code,omitempty"`                  // 编码
	Name               []*GetCoreHrJobRespJobName        `json:"name,omitempty"`                  // 名称
	Description        []*GetCoreHrJobRespJobDescription `json:"description,omitempty"`           // 描述
	Active             bool                              `json:"active,omitempty"`                // 是否启用
	JobTitle           []*GetCoreHrJobRespJobJobTitle    `json:"job_title,omitempty"`             // 职务头衔
	JobFamilyIDList    []string                          `json:"job_family_id_list,omitempty"`    // 职务序列 ID 列表, 枚举值及详细信息可通过【批量查询职务序列】接口查询获得
	JobLevelIDList     []string                          `json:"job_level_id_list,omitempty"`     // 职务级别 ID 列表, 枚举值及详细信息可通过【批量查询职务级别】接口查询获得
	WorkingHoursTypeID string                            `json:"working_hours_type_id,omitempty"` // 工时制度 ID, 枚举值及详细信息可通过【批量查询工时制度】接口查询获得
	EffectiveTime      string                            `json:"effective_time,omitempty"`        // 生效时间
	ExpirationTime     string                            `json:"expiration_time,omitempty"`       // 失效时间
	CustomFields       []*GetCoreHrJobRespJobCustomField `json:"custom_fields,omitempty"`         // 自定义字段
}

// GetCoreHrJobRespJobCustomField ...
type GetCoreHrJobRespJobCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// GetCoreHrJobRespJobDescription ...
type GetCoreHrJobRespJobDescription struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrJobRespJobJobTitle ...
type GetCoreHrJobRespJobJobTitle struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrJobRespJobName ...
type GetCoreHrJobRespJobName struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// getCoreHrJobResp ...
type getCoreHrJobResp struct {
	Code int64             `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string            `json:"msg,omitempty"`  // 错误描述
	Data *GetCoreHrJobResp `json:"data,omitempty"`
}
