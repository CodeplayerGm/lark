// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// QuerySheetFilterView 查询子表内所有的筛选视图基本信息，包括 id、name 和 range
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/query
func (r *DriveService) QuerySheetFilterView(ctx context.Context, request *QuerySheetFilterViewReq, options ...MethodOptionFunc) (*QuerySheetFilterViewResp, *Response, error) {
	if r.cli.mock.mockDriveQuerySheetFilterView != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#QuerySheetFilterView mock enable")
		return r.cli.mock.mockDriveQuerySheetFilterView(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Drive",
		API:                   "QuerySheetFilterView",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/query",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(querySheetFilterViewResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockDriveQuerySheetFilterView(f func(ctx context.Context, request *QuerySheetFilterViewReq, options ...MethodOptionFunc) (*QuerySheetFilterViewResp, *Response, error)) {
	r.mockDriveQuerySheetFilterView = f
}

func (r *Mock) UnMockDriveQuerySheetFilterView() {
	r.mockDriveQuerySheetFilterView = nil
}

type QuerySheetFilterViewReq struct {
	SpreadSheetToken string `path:"spreadsheet_token" json:"-"` // 表格 token, 示例值："shtcnmBA*****yGehy8"
	SheetID          string `path:"sheet_id" json:"-"`          // 子表 id, 示例值："0b**12"
}

type querySheetFilterViewResp struct {
	Code int64                     `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string                    `json:"msg,omitempty"`  // 错误描述
	Data *QuerySheetFilterViewResp `json:"data,omitempty"`
}

type QuerySheetFilterViewResp struct {
	Items []*QuerySheetFilterViewRespItem `json:"items,omitempty"` // 子表的所有筛选视图信息，id、name、range
}

type QuerySheetFilterViewRespItem struct {
	FilterViewID   string `json:"filter_view_id,omitempty"`   // 筛选视图 id
	FilterViewName string `json:"filter_view_name,omitempty"` // 筛选视图名字
	Range          string `json:"range,omitempty"`            // 筛选视图的筛选范围
}
