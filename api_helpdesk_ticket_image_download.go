// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
	"io"
)

// DownloadHelpdeskTicketImage 该接口用于获取服务台工单消息图象。仅支持自建应用。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/ticket_image
func (r *HelpdeskService) DownloadHelpdeskTicketImage(ctx context.Context, request *DownloadHelpdeskTicketImageReq, options ...MethodOptionFunc) (*DownloadHelpdeskTicketImageResp, *Response, error) {
	if r.cli.mock.mockHelpdeskDownloadHelpdeskTicketImage != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Helpdesk#DownloadHelpdeskTicketImage mock enable")
		return r.cli.mock.mockHelpdeskDownloadHelpdeskTicketImage(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Helpdesk",
		API:                   "DownloadHelpdeskTicketImage",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/helpdesk/v1/ticket_images",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedHelpdeskAuth:      true,
	}
	resp := new(downloadHelpdeskTicketImageResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockHelpdeskDownloadHelpdeskTicketImage(f func(ctx context.Context, request *DownloadHelpdeskTicketImageReq, options ...MethodOptionFunc) (*DownloadHelpdeskTicketImageResp, *Response, error)) {
	r.mockHelpdeskDownloadHelpdeskTicketImage = f
}

func (r *Mock) UnMockHelpdeskDownloadHelpdeskTicketImage() {
	r.mockHelpdeskDownloadHelpdeskTicketImage = nil
}

type DownloadHelpdeskTicketImageReq struct {
	TicketID string `query:"ticket_id" json:"-"` // 工单ID, 示例值："12345"
	MsgID    string `query:"msg_id" json:"-"`    // 消息ID, 示例值："12345"
	Index    *int64 `query:"index" json:"-"`     // index，当消息类型为post时，需指定图片index，index从0开始。当消息类型为img时，无需index, 示例值：0
}

type downloadHelpdeskTicketImageResp struct {
	IsFile bool                             `json:"is_file,omitempty"`
	Code   int64                            `json:"code,omitempty"`
	Msg    string                           `json:"msg,omitempty"`
	Data   *DownloadHelpdeskTicketImageResp `json:"data,omitempty"`
}

func (r *downloadHelpdeskTicketImageResp) SetReader(file io.Reader) {
	if r.Data == nil {
		r.Data = &DownloadHelpdeskTicketImageResp{}
	}
	r.Data.File = file
}

type DownloadHelpdeskTicketImageResp struct {
	File io.Reader `json:"file,omitempty"`
}
