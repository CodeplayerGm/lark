// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// EventV1RemedyApproval
//
// 了解事件订阅的使用场景和配置流程，请点击查看 [事件订阅概述](https://open.feishu.cn/document/ukTMukTMukTM/uUTNz4SN1MjL1UzM)
// 补卡申请审批通过后触发此事件。 你可以在「打卡」应用里提交补卡申请。
// * 依赖权限：[访问审批应用]
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uIDO24iM4YjLygjN/event/attendance-record-correction
func (r *EventCallbackService) HandlerEventV1RemedyApproval(f eventV1RemedyApprovalHandler) {
	r.cli.eventHandler.eventV1RemedyApprovalHandler = f
}

type eventV1RemedyApprovalHandler func(ctx context.Context, cli *Lark, schema string, header *EventHeaderV1, event *EventV1RemedyApproval) (string, error)

type EventV1RemedyApproval struct {
	AppID        string `json:"app_id,omitempty"`        // 如: cli_xxx
	TenantKey    string `json:"tenant_key,omitempty"`    // 如: xxx
	Type         string `json:"type,omitempty"`          // 如: remedy_approval
	InstanceCode string `json:"instance_code,omitempty"` // 审批实例Code. 如: xxx
	EmployeeID   string `json:"employee_id,omitempty"`   // 用户id. 如: xxx
	StartTime    int64  `json:"start_time,omitempty"`    // 审批发起时间. 如: 1502199207
	EndTime      int64  `json:"end_time,omitempty"`      // 审批结束时间. 如: 1502199307
	RemedyTime   string `json:"remedy_time,omitempty"`   // 补卡时间. 如: 2018-12-01 12:00:00
	RemedyReason string `json:"remedy_reason,omitempty"` // 补卡原因. 如: xxx
}
