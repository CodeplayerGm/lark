// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// EventV2CalendarCalendarACLDeletedV4
//
// 当被订阅的日历上有ACL被删除时触发此事件。{使用示例}(url=/api/tools/api_explore/api_explore_config?project=calendar&version=v4&resource=calendar.acl&event=deleted)
// 特殊说明：应用首先需要调用上述接口建立订阅关系。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/events/deleted
func (r *EventCallbackService) HandlerEventV2CalendarCalendarACLDeletedV4(f eventV2CalendarCalendarACLDeletedV4Handler) {
	r.cli.eventHandler.eventV2CalendarCalendarACLDeletedV4Handler = f
}

type eventV2CalendarCalendarACLDeletedV4Handler func(ctx context.Context, cli *Lark, schema string, header *EventHeaderV2, event *EventV2CalendarCalendarACLDeletedV4) (string, error)

type EventV2CalendarCalendarACLDeletedV4 struct {
	ACLID      string                                       `json:"acl_id,omitempty"`       // acl资源ID
	Role       CalendarRole                                 `json:"role,omitempty"`         // 对日历的访问权限, 可选值有: `unknown`：未知权限, `free_busy_reader`：游客，只能看到忙碌/空闲信息, `reader`：订阅者，查看所有日程详情, `writer`：编辑者，创建及修改日程, `owner`：管理员，管理日历及共享设置
	Scope      *EventV2CalendarCalendarACLDeletedV4Scope    `json:"scope,omitempty"`        // 权限范围
	UserIDList []*EventV2CalendarCalendarACLDeletedV4UserID `json:"user_id_list,omitempty"` // 需要推送事件的用户列表
}

type EventV2CalendarCalendarACLDeletedV4Scope struct {
	Type   string                                          `json:"type,omitempty"`    // 权限类型，当type为User时，值为open_id/user_id/union_id, 可选值有: `user`：用户
	UserID *EventV2CalendarCalendarACLDeletedV4ScopeUserID `json:"user_id,omitempty"` // 用户 ID
}

type EventV2CalendarCalendarACLDeletedV4ScopeUserID struct {
	UnionID string `json:"union_id,omitempty"` // 用户的 union id
	UserID  string `json:"user_id,omitempty"`  // 用户的 user id, 字段权限要求:  获取用户 user ID
	OpenID  string `json:"open_id,omitempty"`  // 用户的 open id
}

type EventV2CalendarCalendarACLDeletedV4UserID struct {
	UnionID string `json:"union_id,omitempty"` // 用户的 union id
	UserID  string `json:"user_id,omitempty"`  // 用户的 user id
	OpenID  string `json:"open_id,omitempty"`  // 用户的 open id
}
