// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// EventV2HelpdeskTicketCreatedV1
//
// 可监听服务台的工单创建事件。需使用订阅接口订阅：[事件订阅](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/event/overview)
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/events/created
func (r *EventCallbackService) HandlerEventV2HelpdeskTicketCreatedV1(f eventV2HelpdeskTicketCreatedV1Handler) {
	r.cli.eventHandler.eventV2HelpdeskTicketCreatedV1Handler = f
}

type eventV2HelpdeskTicketCreatedV1Handler func(ctx context.Context, cli *Lark, schema string, header *EventHeaderV2, event *EventV2HelpdeskTicketCreatedV1) (string, error)

type EventV2HelpdeskTicketCreatedV1 struct {
	TicketID   string                               `json:"ticket_id,omitempty"`   // 工单ID
	HelpdeskID string                               `json:"helpdesk_id,omitempty"` // 服务台ID
	Guest      *EventV2HelpdeskTicketCreatedV1Guest `json:"guest,omitempty"`       // 工单创建用户
	Stage      int64                                `json:"stage,omitempty"`       // 工单阶段，1：bot，2：人工
	Status     int64                                `json:"status,omitempty"`      // 工单状态，1：已创建 2: 处理中 3: 排队中 4：待定 5：待用户响应 50: 被机器人关闭 51: 被人工关闭
	Score      int64                                `json:"score,omitempty"`       // 工单评分，1：不满意，2:一般，3:满意
	CreatedAt  int64                                `json:"created_at,omitempty"`  // 工单创建时间
	UpdatedAt  int64                                `json:"updated_at,omitempty"`  // 工单更新时间，没有值时为-1
	ClosedAt   int64                                `json:"closed_at,omitempty"`   // 工单结束时间
	Channel    int64                                `json:"channel,omitempty"`     // 工单渠道
	Solve      int64                                `json:"solve,omitempty"`       // 工单是否解决 1:没解决 2:已解决
	ChatID     string                               `json:"chat_id,omitempty"`     // 会话Open ID
}

type EventV2HelpdeskTicketCreatedV1Guest struct {
	ID   *EventV2HelpdeskTicketCreatedV1GuestID `json:"id,omitempty"`   // 用户 ID
	Name string                                 `json:"name,omitempty"` // 用户名
}

type EventV2HelpdeskTicketCreatedV1GuestID struct {
	UnionID string `json:"union_id,omitempty"` // 用户的 union id
	UserID  string `json:"user_id,omitempty"`  // 用户的 user id, 字段权限要求: 获取用户 user ID
	OpenID  string `json:"open_id,omitempty"`  // 用户的 open id
}
