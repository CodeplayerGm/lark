// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// UpdateDrivePublicPermission 该接口用于根据 filetoken 更新文档的公共设置。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-public/patch
func (r *DriveService) UpdateDrivePublicPermission(ctx context.Context, request *UpdateDrivePublicPermissionReq, options ...MethodOptionFunc) (*UpdateDrivePublicPermissionResp, *Response, error) {
	if r.cli.mock.mockDriveUpdateDrivePublicPermission != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#UpdateDrivePublicPermission mock enable")
		return r.cli.mock.mockDriveUpdateDrivePublicPermission(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Drive",
		API:                   "UpdateDrivePublicPermission",
		Method:                "PATCH",
		URL:                   "https://open.feishu.cn/open-apis/drive/v1/permissions/:token/public",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(updateDrivePublicPermissionResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockDriveUpdateDrivePublicPermission(f func(ctx context.Context, request *UpdateDrivePublicPermissionReq, options ...MethodOptionFunc) (*UpdateDrivePublicPermissionResp, *Response, error)) {
	r.mockDriveUpdateDrivePublicPermission = f
}

func (r *Mock) UnMockDriveUpdateDrivePublicPermission() {
	r.mockDriveUpdateDrivePublicPermission = nil
}

type UpdateDrivePublicPermissionReq struct {
	Type            string  `query:"type" json:"-"`              // 权限客体类型，放于query参数中，如：`?type=doc`, 示例值："doc", 可选值有: `doc`：文档, `sheet`：电子表格, `file`：云空间文件, `wiki`：知识库节点, `bitable`：多维表格, `docx`：文档
	Token           string  `path:"token" json:"-"`              // 文件的 token，获取方式见 [概述](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/files/guide/introduction), 示例值："doccnBKgoMyY5OMbUG6FioTXuBe"
	ExternalAccess  *bool   `json:"external_access,omitempty"`   // 是否允许分享到租户外开关, 示例值：true
	SecurityEntity  *string `json:"security_entity,omitempty"`   // 可创建副本/打印/导出/复制设置, 示例值："anyone_can_view", 可选值有: `anyone_can_view`：所有可访问此文档的用户, `anyone_can_edit`：有编辑权限的用户
	CommentEntity   *string `json:"comment_entity,omitempty"`    // 可评论设置, 示例值："anyone_can_view", 可选值有: `anyone_can_view`：所有可访问此文档的用户, `anyone_can_edit`：有编辑权限的用户
	ShareEntity     *string `json:"share_entity,omitempty"`      // 谁可以添加和管理协作者, 示例值："anyone", 可选值有: `anyone`：所有可阅读或编辑此文档的用户, `same_tenant`：组织内所有可阅读或编辑此文档的用户, `only_full_access`：只有所有权限者可以
	LinkShareEntity *string `json:"link_share_entity,omitempty"` // 链接共享, 示例值："tenant_readable", 可选值有: `tenant_readable`：组织内获得链接的人可阅读, `tenant_editable`：组织内获得链接的人可编辑, `anyone_readable`：获得链接的任何人可阅读（仅external_access=“true”时有效）, `anyone_editable`：获得链接的任何人可编辑（仅external_access=“true”时有效）, `closed`：关闭链接分享
	InviteExternal  *bool   `json:"invite_external,omitempty"`   // 非所有权限者/所有者是否允许邀请外部人, 示例值：true
}

type updateDrivePublicPermissionResp struct {
	Code int64                            `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string                           `json:"msg,omitempty"`  // 错误描述
	Data *UpdateDrivePublicPermissionResp `json:"data,omitempty"`
}

type UpdateDrivePublicPermissionResp struct {
	PermissionPublic *UpdateDrivePublicPermissionRespPermissionPublic `json:"permission_public,omitempty"` // 本次更新后的文档公共设置
}

type UpdateDrivePublicPermissionRespPermissionPublic struct {
	ExternalAccess  bool   `json:"external_access,omitempty"`   // 是否允许分享到租户外开关
	SecurityEntity  string `json:"security_entity,omitempty"`   // 可创建副本/打印/导出/复制设置, 可选值有: `anyone_can_view`：所有可访问此文档的用户, `anyone_can_edit`：有编辑权限的用户
	CommentEntity   string `json:"comment_entity,omitempty"`    // 可评论设置, 可选值有: `anyone_can_view`：所有可访问此文档的用户, `anyone_can_edit`：有编辑权限的用户
	ShareEntity     string `json:"share_entity,omitempty"`      // 谁可以添加和管理协作者, 可选值有: `anyone`：所有可阅读或编辑此文档的用户, `same_tenant`：组织内所有可阅读或编辑此文档的用户, `only_full_access`：只有所有权限者可以
	LinkShareEntity string `json:"link_share_entity,omitempty"` // 链接共享, 可选值有: `tenant_readable`：组织内获得链接的人可阅读, `tenant_editable`：组织内获得链接的人可编辑, `anyone_readable`：获得链接的任何人可阅读（仅external_access=“true”时有效）, `anyone_editable`：获得链接的任何人可编辑（仅external_access=“true”时有效）, `closed`：关闭链接分享
	InviteExternal  bool   `json:"invite_external,omitempty"`   // 非所有权限者/所有者是否允许邀请外部人
}
