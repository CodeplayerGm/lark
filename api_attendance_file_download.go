// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
	"io"
)

// DownloadAttendanceFile
//
// 通过文件 ID 下载指定的文件。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/Attendance//rule/download-file
func (r *AttendanceService) DownloadAttendanceFile(ctx context.Context, request *DownloadAttendanceFileReq, options ...MethodOptionFunc) (*DownloadAttendanceFileResp, *Response, error) {
	if r.cli.mock.mockAttendanceDownloadAttendanceFile != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Attendance#DownloadAttendanceFile mock enable")
		return r.cli.mock.mockAttendanceDownloadAttendanceFile(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Attendance",
		API:                   "DownloadAttendanceFile",
		Method:                "GET",
		URL:                   "https://open.feishu.cn/open-apis/attendance/v1/files/:file_id/download",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(downloadAttendanceFileResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockAttendanceDownloadAttendanceFile(f func(ctx context.Context, request *DownloadAttendanceFileReq, options ...MethodOptionFunc) (*DownloadAttendanceFileResp, *Response, error)) {
	r.mockAttendanceDownloadAttendanceFile = f
}

func (r *Mock) UnMockAttendanceDownloadAttendanceFile() {
	r.mockAttendanceDownloadAttendanceFile = nil
}

type DownloadAttendanceFileReq struct {
	FileID string `path:"file_id" json:"-"` // 文件 ID，示例值："xxxxxb306842b1c189bc5212eefxxxxx"
}

type downloadAttendanceFileResp struct {
	IsFile bool
	Code   int64
	Msg    string
	Data   *DownloadAttendanceFileResp
}

func (r *downloadAttendanceFileResp) SetReader(file io.Reader) {
	if r.Data == nil {
		r.Data = &DownloadAttendanceFileResp{}
	}
	r.Data.File = file
}

func (r *downloadAttendanceFileResp) SetFilename(filename string) {
	if r.Data == nil {
		r.Data = &DownloadAttendanceFileResp{}
	}
	r.Data.Filename = filename
}

type DownloadAttendanceFileResp struct {
	File     io.Reader
	Filename string // 文件名
}
