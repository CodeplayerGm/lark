// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteCoreHrWorkingHoursType 删除工时制度。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/delete
func (r *CoreHrService) DeleteCoreHrWorkingHoursType(ctx context.Context, request *DeleteCoreHrWorkingHoursTypeReq, options ...MethodOptionFunc) (*DeleteCoreHrWorkingHoursTypeResp, *Response, error) {
	if r.cli.mock.mockCoreHrDeleteCoreHrWorkingHoursType != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] CoreHr#DeleteCoreHrWorkingHoursType mock enable")
		return r.cli.mock.mockCoreHrDeleteCoreHrWorkingHoursType(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHr",
		API:                   "DeleteCoreHrWorkingHoursType",
		Method:                "DELETE",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/working_hours_types/:working_hours_type_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(deleteCoreHrWorkingHoursTypeResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHrDeleteCoreHrWorkingHoursType mock CoreHrDeleteCoreHrWorkingHoursType method
func (r *Mock) MockCoreHrDeleteCoreHrWorkingHoursType(f func(ctx context.Context, request *DeleteCoreHrWorkingHoursTypeReq, options ...MethodOptionFunc) (*DeleteCoreHrWorkingHoursTypeResp, *Response, error)) {
	r.mockCoreHrDeleteCoreHrWorkingHoursType = f
}

// UnMockCoreHrDeleteCoreHrWorkingHoursType un-mock CoreHrDeleteCoreHrWorkingHoursType method
func (r *Mock) UnMockCoreHrDeleteCoreHrWorkingHoursType() {
	r.mockCoreHrDeleteCoreHrWorkingHoursType = nil
}

// DeleteCoreHrWorkingHoursTypeReq ...
type DeleteCoreHrWorkingHoursTypeReq struct {
	WorkingHoursTypeID string `path:"working_hours_type_id" json:"-"` // 需要删除的工时制度 ID, 示例值: "325325254"
}

// DeleteCoreHrWorkingHoursTypeResp ...
type DeleteCoreHrWorkingHoursTypeResp struct {
}

// deleteCoreHrWorkingHoursTypeResp ...
type deleteCoreHrWorkingHoursTypeResp struct {
	Code int64                             `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string                            `json:"msg,omitempty"`  // 错误描述
	Data *DeleteCoreHrWorkingHoursTypeResp `json:"data,omitempty"`
}
