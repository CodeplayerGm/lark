// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// GetDriveDocRawContent 该接口用于获取文档的纯文本内容，不包含富文本格式信息。
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/ukzNzUjL5czM14SO3MTN
func (r *DriveService) GetDriveDocRawContent(ctx context.Context, request *GetDriveDocRawContentReq, options ...MethodOptionFunc) (*GetDriveDocRawContentResp, *Response, error) {
	if r.cli.mock.mockDriveGetDriveDocRawContent != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#GetDriveDocRawContent mock enable")
		return r.cli.mock.mockDriveGetDriveDocRawContent(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Drive",
		API:                   "GetDriveDocRawContent",
		Method:                "GET",
		URL:                   "https://open.feishu.cn/open-apis/doc/v2/:docToken/raw_content",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(getDriveDocRawContentResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockDriveGetDriveDocRawContent(f func(ctx context.Context, request *GetDriveDocRawContentReq, options ...MethodOptionFunc) (*GetDriveDocRawContentResp, *Response, error)) {
	r.mockDriveGetDriveDocRawContent = f
}

func (r *Mock) UnMockDriveGetDriveDocRawContent() {
	r.mockDriveGetDriveDocRawContent = nil
}

type GetDriveDocRawContentReq struct {
	DocToken string `path:"docToken" json:"-"` // 获取方式详见 [准备接入文档 API](https://open.feishu.cn/document/ukTMukTMukTM/ugzNzUjL4czM14CO3MTN/guide/getting-start)
}

type getDriveDocRawContentResp struct {
	Code int64                      `json:"code,omitempty"` // 如: 0
	Msg  string                     `json:"msg,omitempty"`  // 如: Success
	Data *GetDriveDocRawContentResp `json:"data,omitempty"`
}

type GetDriveDocRawContentResp struct {
	Content string `json:"content,omitempty"` // 如: string
}
