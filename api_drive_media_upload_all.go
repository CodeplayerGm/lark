// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
	"io"
)

// UploadDriveMedia 将云文档或其他飞书套件所需要的素材（图片/文件）上传到云空间。
//
// 该接口不支持太高的并发，且调用频率上限为5QPS
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all
func (r *DriveService) UploadDriveMedia(ctx context.Context, request *UploadDriveMediaReq, options ...MethodOptionFunc) (*UploadDriveMediaResp, *Response, error) {
	if r.cli.mock.mockDriveUploadDriveMedia != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#UploadDriveMedia mock enable")
		return r.cli.mock.mockDriveUploadDriveMedia(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Drive",
		API:                   "UploadDriveMedia",
		Method:                "POST",
		URL:                   r.cli.openBaseURL + "/open-apis/drive/v1/medias/upload_all",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
		IsFile:                true,
	}
	resp := new(uploadDriveMediaResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockDriveUploadDriveMedia(f func(ctx context.Context, request *UploadDriveMediaReq, options ...MethodOptionFunc) (*UploadDriveMediaResp, *Response, error)) {
	r.mockDriveUploadDriveMedia = f
}

func (r *Mock) UnMockDriveUploadDriveMedia() {
	r.mockDriveUploadDriveMedia = nil
}

type UploadDriveMediaReq struct {
	FileName   string    `json:"file_name,omitempty"`   // 文件名, 示例值："test.txt", 最大长度：`250` 字符
	ParentType string    `json:"parent_type,omitempty"` // 上传点类型, 示例值："doc_image", 可选值有: `doc_image`：docs图片, `sheet_image`：sheet图片, `doc_file`：doc文件, `sheet_file`：sheet文件, `vc_virtual_background`：vc虚拟背景(灰度中，暂未开放), `bitable_image`：bitable图片, `bitable_file`：bitable文件, `moments`：同事圈(灰度中，暂未开放), `ccm_import_open`：云文档导入文件
	ParentNode string    `json:"parent_node,omitempty"` // 上传点的token, 示例值："doccn123456"
	Size       int64     `json:"size,omitempty"`        // 文件大小,全量上传最大20M, 示例值：1024, 最大值：`20971520`
	Checksum   *string   `json:"checksum,omitempty"`    // 文件adler32校验和(可选), 示例值："12345678"
	Extra      *string   `json:"extra,omitempty"`       // 扩展信息(可选), 示例值："{"test":"test"}"
	File       io.Reader `json:"file,omitempty"`        // 文件内容, 示例值：file binary
}

type uploadDriveMediaResp struct {
	Code int64                 `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string                `json:"msg,omitempty"`  // 错误描述
	Data *UploadDriveMediaResp `json:"data,omitempty"`
}

type UploadDriveMediaResp struct {
	FileToken string `json:"file_token,omitempty"` // 新创建文件的 token
}
