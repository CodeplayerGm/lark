// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// DeleteHelpdeskFAQ 该接口用于删除知识库。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/delete
func (r *HelpdeskService) DeleteHelpdeskFAQ(ctx context.Context, request *DeleteHelpdeskFAQReq, options ...MethodOptionFunc) (*DeleteHelpdeskFAQResp, *Response, error) {
	if r.cli.mock.mockHelpdeskDeleteHelpdeskFAQ != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Helpdesk#DeleteHelpdeskFAQ mock enable")
		return r.cli.mock.mockHelpdeskDeleteHelpdeskFAQ(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:               "Helpdesk",
		API:                 "DeleteHelpdeskFAQ",
		Method:              "DELETE",
		URL:                 "https://open.feishu.cn/open-apis/helpdesk/v1/faqs/:id",
		Body:                request,
		MethodOption:        newMethodOption(options),
		NeedUserAccessToken: true,
		NeedHelpdeskAuth:    true,
	}
	resp := new(deleteHelpdeskFAQResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

func (r *Mock) MockHelpdeskDeleteHelpdeskFAQ(f func(ctx context.Context, request *DeleteHelpdeskFAQReq, options ...MethodOptionFunc) (*DeleteHelpdeskFAQResp, *Response, error)) {
	r.mockHelpdeskDeleteHelpdeskFAQ = f
}

func (r *Mock) UnMockHelpdeskDeleteHelpdeskFAQ() {
	r.mockHelpdeskDeleteHelpdeskFAQ = nil
}

type DeleteHelpdeskFAQReq struct {
	ID string `path:"id" json:"-"` // id, 示例值："12345"
}

type deleteHelpdeskFAQResp struct {
	Code int64                  `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string                 `json:"msg,omitempty"`  // 错误描述
	Data *DeleteHelpdeskFAQResp `json:"data,omitempty"`
}

type DeleteHelpdeskFAQResp struct{}
