// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// DeleteSheetDimensionRange 该接口用于根据 spreadsheetToken 和维度信息删除行/列 。单次删除最大5000行/列。
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/ucjMzUjL3IzM14yNyMTN
func (r *DriveService) DeleteSheetDimensionRange(ctx context.Context, request *DeleteSheetDimensionRangeReq, options ...MethodOptionFunc) (*DeleteSheetDimensionRangeResp, *Response, error) {
	if r.cli.mock.mockDriveDeleteSheetDimensionRange != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#DeleteSheetDimensionRange mock enable")
		return r.cli.mock.mockDriveDeleteSheetDimensionRange(ctx, request, options...)
	}

	r.cli.log(ctx, LogLevelInfo, "[lark] Drive#DeleteSheetDimensionRange call api")
	r.cli.log(ctx, LogLevelDebug, "[lark] Drive#DeleteSheetDimensionRange request: %s", jsonString(request))

	req := &RawRequestReq{
		Method:                "DELETE",
		URL:                   "https://open.feishu.cn/open-apis/sheets/v2/spreadsheets/:spreadsheetToken/dimension_range",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,

		NeedUserAccessToken: true,
	}
	resp := new(deleteSheetDimensionRangeResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	requestID, statusCode := getResponseRequestID(response)
	if err != nil {
		r.cli.log(ctx, LogLevelError, "[lark] Drive#DeleteSheetDimensionRange DELETE https://open.feishu.cn/open-apis/sheets/v2/spreadsheets/:spreadsheetToken/dimension_range failed, request_id: %s, status_code: %d, error: %s", requestID, statusCode, err)
		return nil, response, err
	} else if resp.Code != 0 {
		r.cli.log(ctx, LogLevelError, "[lark] Drive#DeleteSheetDimensionRange DELETE https://open.feishu.cn/open-apis/sheets/v2/spreadsheets/:spreadsheetToken/dimension_range failed, request_id: %s, status_code: %d, code: %d, msg: %s", requestID, statusCode, resp.Code, resp.Msg)
		return nil, response, NewError("Drive", "DeleteSheetDimensionRange", resp.Code, resp.Msg)
	}

	r.cli.log(ctx, LogLevelDebug, "[lark] Drive#DeleteSheetDimensionRange success, request_id: %s, status_code: %d, response: %s", requestID, statusCode, jsonString(resp.Data))

	return resp.Data, response, nil
}

func (r *Mock) MockDriveDeleteSheetDimensionRange(f func(ctx context.Context, request *DeleteSheetDimensionRangeReq, options ...MethodOptionFunc) (*DeleteSheetDimensionRangeResp, *Response, error)) {
	r.mockDriveDeleteSheetDimensionRange = f
}

func (r *Mock) UnMockDriveDeleteSheetDimensionRange() {
	r.mockDriveDeleteSheetDimensionRange = nil
}

type DeleteSheetDimensionRangeReq struct {
	SpreadsheetToken string                                 `path:"spreadsheetToken" json:"-"` // spreadsheet的token，详见 [对接前说明](/ssl:ttdoc/ukTMukTMukTM/uczNzUjL3czM14yN3MTN) 的第 5 项
	Dimension        *DeleteSheetDimensionRangeReqDimension `json:"dimension,omitempty"`       // 需要删除行列的维度信息
}

type DeleteSheetDimensionRangeReqDimension struct {
	SheetID        string  `json:"sheetId,omitempty"`        // sheetId
	MajorDimension *string `json:"majorDimension,omitempty"` // 默认 ROWS ，可选 ROWS、COLUMNS
	StartIndex     int64   `json:"startIndex,omitempty"`     // 开始的位置
	EndIndex       int64   `json:"endIndex,omitempty"`       // 结束的位置
}

type deleteSheetDimensionRangeResp struct {
	Code int64                          `json:"code,omitempty"`
	Msg  string                         `json:"msg,omitempty"`
	Data *DeleteSheetDimensionRangeResp `json:"data,omitempty"`
}

type DeleteSheetDimensionRangeResp struct {
	DelCount       int64  `json:"delCount,omitempty"`       // 删除的行/列数
	MajorDimension string `json:"majorDimension,omitempty"` // 插入维度
}
