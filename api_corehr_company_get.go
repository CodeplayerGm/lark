// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetCoreHrCompany 根据 ID 查询单个公司。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/get
func (r *CoreHrService) GetCoreHrCompany(ctx context.Context, request *GetCoreHrCompanyReq, options ...MethodOptionFunc) (*GetCoreHrCompanyResp, *Response, error) {
	if r.cli.mock.mockCoreHrGetCoreHrCompany != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] CoreHr#GetCoreHrCompany mock enable")
		return r.cli.mock.mockCoreHrGetCoreHrCompany(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHr",
		API:                   "GetCoreHrCompany",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/companies/:company_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getCoreHrCompanyResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHrGetCoreHrCompany mock CoreHrGetCoreHrCompany method
func (r *Mock) MockCoreHrGetCoreHrCompany(f func(ctx context.Context, request *GetCoreHrCompanyReq, options ...MethodOptionFunc) (*GetCoreHrCompanyResp, *Response, error)) {
	r.mockCoreHrGetCoreHrCompany = f
}

// UnMockCoreHrGetCoreHrCompany un-mock CoreHrGetCoreHrCompany method
func (r *Mock) UnMockCoreHrGetCoreHrCompany() {
	r.mockCoreHrGetCoreHrCompany = nil
}

// GetCoreHrCompanyReq ...
type GetCoreHrCompanyReq struct {
	CompanyID string `path:"company_id" json:"-"` // 公司 ID, 示例值: "151515"
}

// GetCoreHrCompanyResp ...
type GetCoreHrCompanyResp struct {
	Company *GetCoreHrCompanyRespCompany `json:"company,omitempty"` // 公司信息
}

// GetCoreHrCompanyRespCompany ...
type GetCoreHrCompanyRespCompany struct {
	ID                  string                                            `json:"id,omitempty"`                   // 公司 ID
	HiberarchyCommon    *GetCoreHrCompanyRespCompanyHiberarchyCommon      `json:"hiberarchy_common,omitempty"`    // 层级关系, 内层字段见实体
	Type                *GetCoreHrCompanyRespCompanyType                  `json:"type,omitempty"`                 // 性质, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)公司类型（company_type）枚举定义部分获得
	IndustryList        []*GetCoreHrCompanyRespCompanyIndustry            `json:"industry_list,omitempty"`        // 行业, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)行业（industry）枚举定义部分获得
	LegalRepresentative []*GetCoreHrCompanyRespCompanyLegalRepresentative `json:"legal_representative,omitempty"` // 法定代表人
	PostCode            string                                            `json:"post_code,omitempty"`            // 邮编
	TaxPayerID          string                                            `json:"tax_payer_id,omitempty"`         // 纳税人识别号
	Confidential        bool                                              `json:"confidential,omitempty"`         // 是否保密
	SubTypeList         []*GetCoreHrCompanyRespCompanySubType             `json:"sub_type_list,omitempty"`        // 主体类型, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)主体类型（company_sub_type）枚举定义部分获得
	BranchCompany       bool                                              `json:"branch_company,omitempty"`       // 是否为分公司
	PrimaryManager      []*GetCoreHrCompanyRespCompanyPrimaryManager      `json:"primary_manager,omitempty"`      // 主要负责人
	CustomFields        []*GetCoreHrCompanyRespCompanyCustomField         `json:"custom_fields,omitempty"`        // 自定义字段
}

// GetCoreHrCompanyRespCompanyCustomField ...
type GetCoreHrCompanyRespCompanyCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// GetCoreHrCompanyRespCompanyHiberarchyCommon ...
type GetCoreHrCompanyRespCompanyHiberarchyCommon struct {
	ParentID       string                                                    `json:"parent_id,omitempty"`       // 上级组织 ID
	Name           []*GetCoreHrCompanyRespCompanyHiberarchyCommonName        `json:"name,omitempty"`            // 名称
	Type           *GetCoreHrCompanyRespCompanyHiberarchyCommonType          `json:"type,omitempty"`            // 组织类型, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)组织类型（organization_type）枚举定义部分获得
	Active         bool                                                      `json:"active,omitempty"`          // 是否启用
	EffectiveTime  string                                                    `json:"effective_time,omitempty"`  // 生效时间
	ExpirationTime string                                                    `json:"expiration_time,omitempty"` // 失效时间
	Code           string                                                    `json:"code,omitempty"`            // 编码
	Description    []*GetCoreHrCompanyRespCompanyHiberarchyCommonDescription `json:"description,omitempty"`     // 描述
	TreeOrder      string                                                    `json:"tree_order,omitempty"`      // 树形排序, 代表同层级的部门排序序号
	ListOrder      string                                                    `json:"list_order,omitempty"`      // 列表排序, 代表所有部门的混排序号
	CustomFields   []*GetCoreHrCompanyRespCompanyHiberarchyCommonCustomField `json:"custom_fields,omitempty"`   // 自定义字段
}

// GetCoreHrCompanyRespCompanyHiberarchyCommonCustomField ...
type GetCoreHrCompanyRespCompanyHiberarchyCommonCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// GetCoreHrCompanyRespCompanyHiberarchyCommonDescription ...
type GetCoreHrCompanyRespCompanyHiberarchyCommonDescription struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyHiberarchyCommonName ...
type GetCoreHrCompanyRespCompanyHiberarchyCommonName struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyHiberarchyCommonType ...
type GetCoreHrCompanyRespCompanyHiberarchyCommonType struct {
	EnumName string                                                    `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHrCompanyRespCompanyHiberarchyCommonTypeDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHrCompanyRespCompanyHiberarchyCommonTypeDisplay ...
type GetCoreHrCompanyRespCompanyHiberarchyCommonTypeDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyIndustry ...
type GetCoreHrCompanyRespCompanyIndustry struct {
	EnumName string                                        `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHrCompanyRespCompanyIndustryDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHrCompanyRespCompanyIndustryDisplay ...
type GetCoreHrCompanyRespCompanyIndustryDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyLegalRepresentative ...
type GetCoreHrCompanyRespCompanyLegalRepresentative struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyPrimaryManager ...
type GetCoreHrCompanyRespCompanyPrimaryManager struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanySubType ...
type GetCoreHrCompanyRespCompanySubType struct {
	EnumName string                                       `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHrCompanyRespCompanySubTypeDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHrCompanyRespCompanySubTypeDisplay ...
type GetCoreHrCompanyRespCompanySubTypeDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHrCompanyRespCompanyType ...
type GetCoreHrCompanyRespCompanyType struct {
	EnumName string                                    `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHrCompanyRespCompanyTypeDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHrCompanyRespCompanyTypeDisplay ...
type GetCoreHrCompanyRespCompanyTypeDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// getCoreHrCompanyResp ...
type getCoreHrCompanyResp struct {
	Code int64                 `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string                `json:"msg,omitempty"`  // 错误描述
	Data *GetCoreHrCompanyResp `json:"data,omitempty"`
}
